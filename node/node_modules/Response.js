module.exports = function(query){
	var jade = require('jade'),
	path = require('path');
	var jadeTemp = {
	'details':jade.compile(process.cwd() + "/../Student/details.jade"),
	'courses':jade.compile(process.cwd() + "/../Student/courses.jade"),
	'advisor':jade.compile(process.cwd() + "/../Staff/advisor.jade"),
	'StaffHome':jade.compile(process.cwd() + "/../Staff/home.jade"),
	'school':jade.compile(process.cwd() + "/../Staff/school.jade"),
	'degree':jade.compile(process.cwd() + "/../Staff/degree.jade"),
	'CCL':jade.compile(process.cwd() + "/../Staff/CCL.jade"),
	'enrol':jade.compile(process.cwd() + "/../Student/enrol.jade"),
	};
	var Staff = function(req, res){
		var file = req.params.file;
	    var StaffId = req.session.user.StaffId;
	    var school = req.session.user.School;
	    var degree = req.query.degree;
	    if (file == "home"){
	      var name = req.session.user.Forename + " " + req.session.user.Surname;
	      var email = req.session.user.Email;
	      var staffId = req.session.user.StaffId;
	      userX = {name: name, staffId: staffId, email: email}
	      var html = jadeTemp['StaffHome'](userX);
	      res.render(html);
	    }
	    else if (file == "advisor"){
	      query.advisees(StaffId, function(rows){
	        var Data = JSON.stringify(rows);
	        html = jadeTemp[file](aaData = JSON.stringify(rows));
	        res.render(html);
	      });
	    }
	    else if (file == "degree"){
	      query.degreeCourseLists(degree, function(dCourseLists){
	        query.courseLists(school, function(allCourseListNames){
	          query.singleDegree(degree, function(fullDegree){
	          	query.getCourseListsInfo(function(allCourseListInfo){
		            html = jadeTemp[file](Degree = degree, degreeDetails = JSON.stringify(fullDegree), School = school, degreeCourseLists = JSON.stringify(dCourseLists), AllCourseListNames = JSON.stringify(allCourseListNames), AllCourseListInfo = JSON.stringify(allCourseListInfo));
		            res.render(html);
		        });
	          });
	        });
	      });
	    }
	    else if (file == "school"){
	      query.degrees(school, function(degreeRows){
	        query.courseLists(school,function(courseRows){
	        	query.getSchoolCourses(school,function(allCourses){
	          		html = jadeTemp[file](Degrees = JSON.stringify(degreeRows), CL = JSON.stringify(courseRows), School = school, AllCourses = JSON.stringify(allCourses));
	          		res.render(html);
	          	});
	        });
	      });
	    }
	    else if (file == "CCL"){
			query.getSchoolCourses(school, function(courses){
				query.courseLists(school, function(allCourseListNames){
					html = jadeTemp[file](data = JSON.stringify(courses), courseLists = JSON.stringify(allCourseListNames));
					res.render(html);
				});
			});
	    }
	    else{
	      res.sendfile(path.resolve(process.cwd() + "/../Staff/" + file));   
	    }
  	}

  	var Student = function(req, res){
	    var file = req.params.file;
		var StaffId = req.session.user.Advisor;
		var degree = req.session.user.Degree;
		var matric = req.session.user.Matric;
		var year = req.session.user.Year;
	    if (file == "details"){

	      var html
	      var name = req.session.user.Forename + " " + req.session.user.Surname;

	      var email = req.session.user.Email;
	      var advisorName = req.session.user.Advisor.Forename + " " + req.session.user.Advisor.Surname;
	      var advisorEmail = req.session.user.Advisor.Email
	      html = jadeTemp[file](user = {name: name, matric: matric, email: email, advisorName:advisorName, advisorEmail:advisorEmail});
	      res.render(html);
	    }
	    else if (file == "courses"){
	      	query.studentTakesCourses(matric, function(rows){
	        	html = jadeTemp[file](aaData = JSON.stringify(rows));
	        	res.render(html);
	      });
	    }
	    else if (file == "enrol"){
	    	query.degreeCourseListsTotal(degree, function(courseListData){
	    		query.getStudentCourses(matric , function(Courses){
	    			query.getAllCourses(function(allCourses){
	    				query.getAllSchools(function(allSchools){
	    					query.getAllColleges(function(allColleges){
								html = jadeTemp[file](AllColleges = JSON.stringify(allColleges), CourseListData = JSON.stringify(courseListData), Degree = degree, courses = JSON.stringify({list:Courses}), Year = year,AllCourses = JSON.stringify(allCourses), AllSchools = JSON.stringify(allSchools));
		        				res.render(html);
		        			});
		        		});
	    			})

	    		})
			});
	    }
	    else{
	      res.sendfile(path.resolve(process.cwd() + "/../Student/" + file));
	      
	    }

	  }

	var Post = function(req, res){
		request = req.route.path;
		var data = req.body;
		var school = req.session.user.School;
		if(request == "/CreateCourseList"){
			query.updateCourseList(data, school);
	    	query.updateGroup(data);
			res.redirect('/Staff/school');// doesnt work don't know why
		}
		else if(request == "/AssignCourseListNames"){
			var degree = data.degree;
			for (var i = 0; i<data.courseLists.length;i++){
				if (data.courseLists[i].name=="None"){
					query.deleteDegreeHasCourseListRow(degree, data.courseLists[i].year, school);
				}
				else{
					
					query.updateDegreeCourseLists(degree, school, data.courseLists[i].year, data.courseLists[i].name)
				}

			}
			res.redirect('Staff/school');// doesnt work don't know why. 
		}
		else if(request == "/enrolInCourse"){
			var course = data.courseId;
			var matric = req.session.user.Matric;
			query.updateCoursesTaken(matric, course, function(response){
				res.send(response, "it worked!");
			});
		}
		else{
			res.status(404);
		}
	}
  	return {Post: Post, Staff: Staff, Student: Student};

}